name: build-app
on:
  push:
    branches: [master, dev]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Install APkSigner
        run: sudo apt-get install apksigner

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: test
        run: ./gradlew test

      - name: "Create Keystore folder"
        run: |
          mkdir .keys

      - name: "Generate Keystore File"
        id: keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: '.keys/h300s.keystore'
          encodedString: ${{ secrets.SIGN_KEY }}

      - name: Mark Build Date
        id: date
        run: |
          echo "::set-output name=versionNum::$(date +'%Y%m%d')"
          echo "::set-output name=version::v$(date +'%Y-%m-%d')"

      - name: Bump version
        if: github.ref == 'refs/heads/master'
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: app/build.gradle
          versionCode:  ${{ steps.date.outputs.versionNum }}
          versionName:  ${{ steps.date.outputs.version }}

      - name: "Commit version Bump"
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Version Bump"

      - name: "Build APK"
        id: "apk_unsigned"
        run: |
          ./gradlew assembleRelease
          ls -l ./app/build/outputs/apk/release
          echo "::set-output name=path::./app/build/outputs/apk/release/app-release-unsigned.apk"

      - name: "Sign APK"
        id: "apk"
        env:
          APK_PATH: ${{ steps.apk_unsigned.outputs.path }}
          KEYSTORE_FILE: ${{ steps.keystore.outputs.filePath }}
          KEYALIAS: ${{secrets.KEYALIAS}}
          MYAPP_RELEASE_KEY_PASSWORD: ${{secrets.MYAPP_RELEASE_KEY_PASSWORD}}
          MYAPP_RELEASE_STORE_PASSWORD: ${{secrets.MYAPP_RELEASE_STORE_PASSWORD}}
        run: |
          apksigner sign --ks ${KEYSTORE_FILE} --ks-key-alias ${KEYALIAS} --ks-pass env:MYAPP_RELEASE_STORE_PASSWORD --key-pass env:MYAPP_RELEASE_STORE_PASSWORD --out ./app/release/app-release.apk  ${APK_PATH}
          echo "::set-output name=path::./app/release/app-release.apk

      - name: Tag version
        id: tag_version
        if: github.ref == 'refs/heads/master'
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.date.outputs.versionNum }}

      - name: Create a GitHub release
        if: github.ref == 'refs/heads/master'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release APK ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Upload Release Asset
        if: github.ref == 'refs/heads/master'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.apk.outputs.path }}
          asset_name: app-release.apk
          asset_content_type: application/zip